package columbia.plt.tt.interpreter;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

public class TTGrammarTester {

  public static void main(String[] args) throws RecognitionException {
    try {
      CharStream stream = new ANTLRInputStream(new FileInputStream("src/columbia/plt/tt/Program1.tt"));
      //CharStream stream = new ANTLRStringStream(	"Calendar x;");
      //CharStream stream = new ANTLRStringStream( "Calendar x; every Date d from 2013.01.01 to 2013.01.03 by tf { }");
      TTGrammarLexer lexer = new TTGrammarLexer(stream);
      TokenStream tokenStream = new CommonTokenStream(lexer);
      TTGrammarParser parser = new TTGrammarParser(tokenStream);
  	
      declarationStatement_return declaration = parser.declarationStatement();
      System.out.println(declaration.getTree().toStringTree());
  	
      everyFromToByStatement_return every = parser.everyFromToByStatement();
      System.out.println(every.getTree().toStringTree());
  	
      TTGrammarEvaluator evaluator = new TTGrammarEvaluator(new CommonTreeNodeStream(every.getTree()));//declaration.tree));
  	//evaluator.declarationStatement();
      evaluator.everyFromToByStatement();
      
      for (int i = 0; i < lexer.getErrors().size(); i ++) {
        System.out.println(lexer.getErrors().get(i));
      }
        		
      for (int i = 0; i < parser.getErrors().size(); i ++) {
      	System.out.println(lexer.getErrors().get(i));
      }
                    		
      for (int i = 0; i < evaluator.getErrors().size(); i ++) {
        System.out.println(evaluator.getErrors().get(i));
      }
    } 
    catch (FileNotFoundException e) {
      e.printStackTrace();
    }
    catch (IOException e) {
      e.printStackTrace();
    }
  }
}

